{
  "openapi": "3.0.0",
  "info": {
    "title": "MVP API",
    "version": "1.0.0",
    "description": "API de usuários, agendamentos, livros e personagens"
  },
  "paths": {
    "/healthz": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "API online"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Listar usuários",
        "responses": {
          "200": { "description": "Lista de usuários cadastrados" }
        }
      },
      "post": {
        "summary": "Criar usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                },
                "required": ["name", "email"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário criado com sucesso" },
          "400": { "description": "Dados inválidos" }
        }
      }
    },
    "/api/users/{id}": {
      "delete": {
        "summary": "Remover usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Usuário removido" },
          "404": { "description": "Usuário não encontrado" }
        }
      }
    },
    "/api/agendamentos": {
      "get": {
        "summary": "Listar agendamentos",
        "responses": {
          "200": { "description": "Lista de agendamentos" }
        }
      },
      "post": {
        "summary": "Criar agendamento",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": { "type": "string" },
                  "email": { "type": "string" },
                  "data_visita": { "type": "string", "format": "date-time" },
                  "assunto": { "type": "string" }
                },
                "required": ["nome", "email", "data_visita"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Agendamento criado com sucesso" },
          "400": { "description": "Dados inválidos" }
        }
      }
    },
    "/api/agendamentos/{id}": {
      "put": {
        "summary": "Atualizar agendamento",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": { "type": "string" },
                  "email": { "type": "string" },
                  "data_visita": { "type": "string", "format": "date-time" },
                  "assunto": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Agendamento atualizado" },
          "404": { "description": "Agendamento não encontrado" }
        }
      },
      "delete": {
        "summary": "Remover agendamento",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Agendamento removido" },
          "404": { "description": "Agendamento não encontrado" }
        }
      }
    },
    "/api/books": {
      "get": {
        "summary": "Listar livros",
        "responses": {
          "200": { "description": "Lista de livros cadastrados" }
        }
      },
      "post": {
        "summary": "Criar livro",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["title", "description"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Livro criado com sucesso" },
          "400": { "description": "Dados inválidos" }
        }
      }
    },
    "/api/books/{id}": {
      "get": {
        "summary": "Buscar livro por ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Livro encontrado" },
          "404": { "description": "Livro não encontrado" }
        }
      },
      "delete": {
        "summary": "Remover livro",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Livro removido" },
          "404": { "description": "Livro não encontrado" }
        }
      }
    },
    "/api/characters": {
      "get": {
        "summary": "Listar personagens",
        "responses": {
          "200": { "description": "Lista de personagens cadastrados" }
        }
      },
      "post": {
        "summary": "Criar personagem",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "psychological": { "type": "string" },
                  "philosophical": { "type": "string" },
                  "religious": { "type": "string" },
                  "book_id": { "type": "integer" }
                },
                "required": ["name", "psychological", "philosophical", "religious", "book_id"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Personagem criado com sucesso" },
          "400": { "description": "Dados inválidos" }
        }
      }
    },
    "/api/characters/{id}": {
      "get": {
        "summary": "Buscar personagem por ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Personagem encontrado" },
          "404": { "description": "Personagem não encontrado" }
        }
      },
      "delete": {
        "summary": "Remover personagem",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Personagem removido" },
          "404": { "description": "Personagem não encontrado" }
        }
      }
    }
  }
}
